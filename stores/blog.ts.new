  // Helpers
  const getImageUrl = (path?: string): string => {
    if (!path) return '';
    return path.startsWith('http') ? path : `${imageBaseUrl}${path}`;
  };

  // Helper para formatear fechas
  const formatDate = (dateString: string, locale = 'es-ES'): string => {
    if (!dateString) return '';
    try {
      const options: Intl.DateTimeFormatOptions = {
        year: 'numeric',
        month: 'long',
        day: 'numeric',
      };
      return new Date(dateString).toLocaleDateString(locale, options);
    } catch (e) {
      console.error('Error formateando fecha:', e);
      return '';
    }
  };

  // Devolver el store completo
  return {
    // State
    posts,
    categories,
    tags,
    currentPost,
    loading,
    error,
    currentTenant,
    apiBaseUrl,
    
    // Getters
    featuredPosts: computed(() => featuredPosts.value),
    recentPosts: computed(() => recentPosts.value),
    
    // Actions
    fetchPosts,
    fetchPost,
    fetchCategories,
    fetchCategory,
    fetchTags,
    fetchTag,
    fetchPostsByCategory,
    fetchPostsByTag,
    searchPosts,
    
    // Helpers
    getImageUrl,
    formatDate
  };
});
